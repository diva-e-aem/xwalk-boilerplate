{"version":3,"file":"fragment.js","sources":["../../src/blocks/fragment/fragment.ts"],"sourcesContent":["/*\n * Fragment Block\n * Include content on a page as a fragment.\n * https://www.aem.live/developer/block-collection/fragment\n */\n\nimport { loadBlocks } from '../../app/tasks/loadBlocks.js';\n\nimport './fragment.scss';\nimport { decorateButtons } from '../../app/tasks/decorateButtons.js';\nimport { transformSections } from '../../app/tasks/transformSections.js';\nimport { decorateBlocks } from '../../app/tasks/decorateBlocks.js';\n\n/**\n * Loads a fragment.\n * @param {string} path The path to the fragment\n * @returns {HTMLElement} The root element of the fragment\n */\nexport async function loadFragment(path) {\n  if (path && path.startsWith('/')) {\n    // eslint-disable-next-line no-param-reassign\n    path = path.replace(/(\\.plain)?\\.html/, '');\n    const resp = await fetch(`${path}.plain.html`);\n    if (resp.ok) {\n      const main = document.createElement('main');\n      main.innerHTML = await resp.text();\n\n      // reset base path for media to fragment base\n      const resetAttributeBase = (tag, attr) => {\n        main.querySelectorAll(`${tag}[${attr}^=\"./media_\"]`).forEach((elem) => {\n          elem[attr] = new URL(elem.getAttribute(attr) ?? '', new URL(path, window.location.origin)).href;\n        });\n      };\n      resetAttributeBase('img', 'src');\n      resetAttributeBase('source', 'srcset');\n\n      decorateButtons(main);\n      transformSections(main);\n      decorateBlocks(main);\n      await loadBlocks(main);\n      return main;\n    }\n  }\n  return null;\n}\n\nexport default async function decorate(block) {\n  const link = block.querySelector('a');\n  const path = link ? link.getAttribute('href') : block.textContent.trim();\n  const fragment = await loadFragment(path);\n  if (fragment) {\n    const fragmentSection = fragment.querySelector(':scope .section');\n    if (fragmentSection) {\n      block.classList.add(...fragmentSection.classList);\n      block.classList.remove('section');\n      block.replaceChildren(...fragmentSection.childNodes);\n    }\n  }\n}\n"],"names":["loadFragment","path","resp","main","resetAttributeBase","tag","attr","elem","decorateButtons","transformSections","decorateBlocks","loadBlocks","decorate","block","link","fragment","fragmentSection"],"mappings":"2LAkBA,eAAsBA,EAAaC,EAAM,CACvC,GAAIA,GAAQA,EAAK,WAAW,GAAG,EAAG,CAEzBA,EAAAA,EAAK,QAAQ,mBAAoB,EAAE,EAC1C,MAAMC,EAAO,MAAM,MAAM,GAAGD,CAAI,aAAa,EAC7C,GAAIC,EAAK,GAAI,CACL,MAAAC,EAAO,SAAS,cAAc,MAAM,EACrCA,EAAA,UAAY,MAAMD,EAAK,KAAK,EAG3B,MAAAE,EAAqB,CAACC,EAAKC,IAAS,CACnCH,EAAA,iBAAiB,GAAGE,CAAG,IAAIC,CAAI,eAAe,EAAE,QAASC,GAAS,CACrEA,EAAKD,CAAI,EAAI,IAAI,IAAIC,EAAK,aAAaD,CAAI,GAAK,GAAI,IAAI,IAAIL,EAAM,OAAO,SAAS,MAAM,CAAC,EAAE,IAAA,CAC5F,CAAA,EAEH,OAAAG,EAAmB,MAAO,KAAK,EAC/BA,EAAmB,SAAU,QAAQ,EAErCI,EAAgBL,CAAI,EACpBM,EAAkBN,CAAI,EACtBO,EAAeP,CAAI,EACnB,MAAMQ,EAAWR,CAAI,EACdA,CACT,CACF,CACO,OAAA,IACT,CAEA,eAA8BS,EAASC,EAAO,CACtC,MAAAC,EAAOD,EAAM,cAAc,GAAG,EAC9BZ,EAAOa,EAAOA,EAAK,aAAa,MAAM,EAAID,EAAM,YAAY,OAC5DE,EAAW,MAAMf,EAAaC,CAAI,EACxC,GAAIc,EAAU,CACN,MAAAC,EAAkBD,EAAS,cAAc,iBAAiB,EAC5DC,IACFH,EAAM,UAAU,IAAI,GAAGG,EAAgB,SAAS,EAC1CH,EAAA,UAAU,OAAO,SAAS,EAC1BA,EAAA,gBAAgB,GAAGG,EAAgB,UAAU,EAEvD,CACF"}