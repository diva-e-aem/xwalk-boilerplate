{"version":3,"file":"main.js","sources":["../../src/helpers/editor/isUniversalEditorActive.ts","../../src/app/tasks/decorateTemplateAndTheme.ts","../../src/utils/undefinedOnEmpty.ts","../../src/app/tasks/setDocLanguage.ts","../../src/helpers/sidekick/getLocation.ts","../../src/helpers/sidekick/getOrigin.ts","../../src/app/utils/getUrlForEndpoint.ts","../../src/app/tasks/loadCSS.ts","../../config.ts","../../src/app/tasks/loadFonts.ts","../../src/app/tasks/sampleRUM.ts","../../src/app/tasks/setupHlxObj.ts","../../src/app/tasks/initSampleRUM.ts","../../src/app/tasks/loadBlock.ts","../../src/app/tasks/waitForLCP.ts","../../src/app/index.ts","../../src/app/init.ts","../../src/main.ts"],"sourcesContent":["/**\n * Verifies if the Universal Editor is in use by checking if the page is running in an iframe with srcdoc\n * and if the main element has the sidekick-library class.\n * @returns {boolean} Whether the Universal Editor is in use.\n */\nexport const isUniversalEditorActive = (): boolean => {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n};\n","import { decorateTemplateAndTheme as aemDecorateTemplateAndTheme } from '../../../libs/aem';\n\n/**\n * Decorates the template and theme by adding classes to the body.\n * The classes are defined in the meta tags of the document.\n * Usefull for styling the page based on the template and theme meta tags\n * that can be set in the metadata table in EDS.\n * @example\n * <meta name=\"template\" content=\"template-name\">\n * <meta name=\"theme\" content=\"theme-name\">\n * @example\n * <body class=\"template-name theme-name\">\n */\nexport function decorateTemplateAndTheme() {\n  aemDecorateTemplateAndTheme();\n}\n","/**\n * Returns undefined if the value is an empty string, otherwise returns the value itself.\n *\n * @param {string} value - The value to check.\n * @returns {string | undefined} - If the value is an empty string, returns undefined\n * otherwise, returns the value itself.\n *\n * @example\n * // Example usage:\n * const emptyValue = '';\n * const nonEmptyValue = 'Hello, World!';\n *\n * const result1 = undefinedOnEmpty(emptyValue);\n * console.log(result1); // Output: undefined\n *\n * const result2 = undefinedOnEmpty(nonEmptyValue);\n * console.log(result2); // Output: 'Hello, World!'\n */\nexport function undefinedOnEmpty(value: string): string | undefined {\n  return value.trim() === '' ? undefined : value;\n}\n","import { getMetadata } from '../../utils/getMetadata';\nimport { undefinedOnEmpty } from '../../utils/undefinedOnEmpty';\n\n/*\n * This function sets the language of the document based on the language metadata.\n */\nexport function setDocLanguage() {\n  const lang = getMetadata('language');\n  document.documentElement.lang = undefinedOnEmpty(lang) || 'en';\n}\n","import { isSidekickLibraryActive } from './isSidekickLibraryActive';\n\n/**\n * Returns the true origin of the current page in the browser.\n * If the page is running in an iframe with srcdoc, the query param is returned.\n * @returns {String} The query param of the current page or the query param of the block running in the library\n *\n * @example\n * const searchParams = new URLSearchParams(getLocation().search);\n *\n * @remarks\n * Needs to be used when the Sidekick Library Plugin is in use.\n */\nexport function getLocation(): Location {\n  return isSidekickLibraryActive() ? window.parent.location : window.location;\n}\n","import { isSidekickLibraryActive } from './isSidekickLibraryActive';\n\n/**\n * Returns the true origin of the current page in the browser.\n * If the page is running in an iframe with srcdoc, the ancestor origin is returned.\n * @returns {String} The true origin\n *\n * @example\n * const origin = getOrigin();\n *\n * @remarks\n * Needs to be used when the Sidekick Library Plugin is in use.\n */\nexport function getOrigin(): string {\n  return isSidekickLibraryActive() ? window.parent.location.origin : window.location.origin;\n}\n","import { getOrigin } from '../../helpers/sidekick/getOrigin';\n\n/**\n * Constructs a complete URL for a given endpoint relative to the base URL.\n * The base URL is derived from `window.hlx.codeBasePath` and the current location.\n * This helper respolves URLs for assets in different AEM contexts. (author, publish, local development, sidekick library etc.)\n * @param {string} endpoint - The endpoint of the asset or fetch request.\n * @returns {URL} - The complete URL for the given endpoint.\n *\n * @example\n * // Assuming window.hlx.codeBasePath is '/base/path/' and the origin is 'https://example.com'\n * const url = getUrlForEndpoint('/api/data');\n * console.log(url.href); // Output: 'https://example.com/base/path/api/data'\n */\nexport const getUrlForEndpoint = (endpoint: string): URL | never => {\n  try {\n    const location = getOrigin();\n    const basePath = window.hlx.codeBasePath.endsWith('/') ? window.hlx.codeBasePath : `${window.hlx.codeBasePath}/`;\n    let normalizedEndpoint = endpoint;\n\n    if (endpoint.startsWith('./')) {\n      normalizedEndpoint = endpoint.substring(2);\n    } else if (endpoint.startsWith('/')) {\n      normalizedEndpoint = endpoint.substring(1);\n    }\n\n    const fullPath = `${basePath}${normalizedEndpoint}`;\n    const url = new URL(fullPath, location);\n\n    return url;\n  } catch (error) {\n    throw new Error(`Failed to build Url for endpoint: ${error}`);\n  }\n};\n","import { getUrlForEndpoint } from '../utils/getUrlForEndpoint';\nimport { loadCSS as aemLoadCSS } from '../../../libs/aem';\n\n/**\n * Load a CSS file if it is not already loaded append it to the head.\n * @param {string} endpoint - The endpoint of the CSS file.\n * @returns {Promise<void>}\n */\nexport async function loadCSS(endpoint: string): Promise<void> {\n  const { href } = getUrlForEndpoint(endpoint);\n  await aemLoadCSS(href);\n}\n","export interface Config {\n  mainTsPath: string;\n  mainScssPath: string;\n  iconsDirPath: string;\n  iconsTypesPath: string;\n  fontsScssPath?: string;\n  fontsCssPath?: string;\n  lazyStylesScssPath?: string;\n  lazyStylesCssPath?: string;\n  sidekickLibraryStylesScssPath?: string;\n  sidekickLibraryStylesCssPath?: string;\n  universalEditorStylesScssPath?: string;\n  universalEditorStylesCssPath?: string;\n  editorTsPath: string;\n  lcpBlocks?: string[];\n}\n\nexport const config: Config = {\n  mainTsPath: './src/main.ts',\n  mainScssPath: './src/styles/sass/main.scss',\n  iconsDirPath: './public/icons',\n  iconsTypesPath: './src/types/icons.types.ts',\n  fontsScssPath: './src/styles/sass/fonts.scss',\n  fontsCssPath: './dist/fonts/fonts.css',\n  lazyStylesScssPath: './src/styles/sass/lazy-styles.scss',\n  lazyStylesCssPath: './dist/lazyStyles/lazyStyles.css',\n  sidekickLibraryStylesScssPath: './src/styles/sass/sidekick-library-styles.scss',\n  sidekickLibraryStylesCssPath: './dist/sidekickLibraryStyles/sidekickLibraryStyles.css',\n  universalEditorStylesScssPath: './src/styles/sass/universal-editor-styles.scss',\n  universalEditorStylesCssPath: './dist/universalEditorStyles/universalEditorStyles.css',\n  editorTsPath: './src/app/editor/editor-support.ts',\n  lcpBlocks: [],\n};\n","import { DebuggerService } from '@kluntje/services';\n\nimport { getLocation } from 'Helpers/sidekick/getLocation';\n\nimport { loadCSS } from './loadCSS';\nimport { config } from '../../../config';\n\nexport async function loadFonts(): Promise<void> {\n  const { fontsCssPath } = config;\n  if (!fontsCssPath) return;\n  await loadCSS(fontsCssPath);\n  try {\n    if (!getLocation().hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (error) {\n    DebuggerService.error('loadFonts: Error setting fonts-loaded in session storage', error);\n  }\n}\n","import { sampleRUM as aemSampleRUM } from '../../../libs/aem';\n\nexport function sampleRUM(checkpoint: string, data = {}) {\n  aemSampleRUM(checkpoint, data);\n}\n","import { setup as aemSetup } from '../../../libs/aem';\nimport { DebuggerService } from '@kluntje/services';\n\n/**\n * Setup block utils.\n */\nexport default function setupHlxObj(mainScriptPath = '/dist/main/main.js') {\n  aemSetup();\n\n  const scriptEl = document.querySelector(`script[src$=\"${mainScriptPath}\"]`) as HTMLScriptElement;\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split(mainScriptPath);\n    } catch (error) {\n      DebuggerService.log('setupHlxObj: Could not set codeBasePath.', error);\n    }\n  }\n}\n","import { sampleRUM } from './sampleRUM';\nimport setupHlxObj from './setupHlxObj';\n\nexport function initSampleRUM() {\n  setupHlxObj();\n  sampleRUM('top');\n}\n","import { loadBlock as aemLoadBlock } from '../../../libs/aem';\n\n/**\n * Loads JS and CSS for a block.\n * @param {Element} block The block element\n */\nexport async function loadBlock(block: Element): Promise<void> {\n  aemLoadBlock(block);\n}\n","import { config } from '../../../config';\nimport { loadBlock } from './loadBlock';\n\n/**\n * Wait for the Largest Contentful Paint (LCP) candidate to be loaded.\n * This function will load the modules and styles for the first section after the LCP candidate.\n * @returns {Promise<Event | void>}\n */\nexport async function waitForLCP(): Promise<Event | void> {\n  const firstSection: HTMLElement | null = document.querySelector('.section');\n  const lcpCandidate = document.querySelector<HTMLImageElement>('main img');\n  const { lcpBlocks } = config;\n\n  if (firstSection) {\n    const blocks = [...firstSection.querySelectorAll<HTMLDivElement>('div.block')];\n    const blockPromises: Promise<void>[] = [];\n\n    for (const block of blocks) {\n      if (lcpBlocks?.includes(block.dataset.blockName as string)) {\n        blockPromises.push(loadBlock(block));\n      }\n      if (blockPromises.length < 1 && blocks.length > 0) {\n        const firstBlock = blocks[0];\n        blockPromises.push(loadBlock(firstBlock));\n      }\n    }\n\n    await Promise.all(blockPromises);\n    firstSection.style.removeProperty('display');\n  }\n\n  // @ts-ignore\n  if (document.body.style.display === 'none') {\n    // @ts-ignore\n    document.body.style.display = null;\n  }\n\n  await new Promise<Event | void>((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.setAttribute('fetchpriority', 'high');\n      lcpCandidate.addEventListener('load', (ev: Event) => resolve(ev));\n      lcpCandidate.addEventListener('error', (ev: Event) => resolve(ev));\n    } else {\n      resolve();\n    }\n  });\n}\n","import { DebuggerService } from '@kluntje/services';\n\nimport { isSidekickLibraryActive } from 'Helpers/sidekick/isSidekickLibraryActive';\nimport { isUniversalEditorActive } from 'Helpers/editor/isUniversalEditorActive';\n\nimport { decorateTemplateAndTheme } from './tasks/decorateTemplateAndTheme';\nimport { decorateButtons } from './tasks/decorateButtons';\nimport { setDocLanguage } from './tasks/setDocLanguage';\nimport { loadFonts } from './tasks/loadFonts';\nimport { initSampleRUM } from './tasks/initSampleRUM';\nimport { loadCSS } from './tasks/loadCSS';\nimport { config } from '../../config';\nimport { loadSections } from './tasks/loadSections';\nimport { decorateSections } from './tasks/decorateSections';\nimport { decorateBlocks } from './tasks/decorateBlocks';\nimport { sampleRUM } from './tasks/sampleRUM';\nimport { waitForLCP } from './tasks/waitForLCP';\n\nclass HLX {\n  private beforeEagerCallbacks: Array<() => Promise<void>> = [];\n  private loadEagerCallbacks: Array<() => Promise<void>> = [];\n  private beforeLoadLazyCallbacks: Array<() => Promise<void>> = [];\n  private loadLazyCallbacks: Array<() => Promise<void>> = [];\n  private beforeLoadDelayedCallbacks: Array<() => Promise<void>> = [];\n  private loadDelayedCallbacks: Array<() => Promise<void>> = [];\n  private initializedCallbacks: Array<() => Promise<void>> = [];\n\n  private beforeEagerPromise?: Promise<void>;\n  private eagerPromise?: Promise<void>;\n  private beforeLazyPromise?: Promise<void>;\n  private lazyPromise?: Promise<void>;\n  private beforeDelayedPromise?: Promise<void>;\n  private delayedPromise?: Promise<void>;\n  private initializedPromise?: Promise<void>;\n\n  private get beforeEager() {\n    if (this.beforeEagerPromise === undefined) {\n      this.beforeEagerPromise = this.beforeLoadEager();\n    }\n    return this.beforeEagerPromise;\n  }\n\n  private get loadEager() {\n    if (this.eagerPromise === undefined) {\n      this.eagerPromise = this.loadEagerPromise();\n    }\n    return this.eagerPromise;\n  }\n\n  private get beforeLoadLazy() {\n    if (this.beforeLazyPromise === undefined) {\n      this.beforeLazyPromise = this.beforeLoadLazyPromise();\n    }\n    return this.beforeLazyPromise;\n  }\n\n  private get loadLazy() {\n    if (this.lazyPromise === undefined) {\n      this.lazyPromise = this.loadLazyPromise();\n    }\n    return this.lazyPromise;\n  }\n\n  private get beforeLoadDelayed() {\n    if (this.beforeDelayedPromise === undefined) {\n      this.beforeDelayedPromise = this.beforeLoadDelayedPromise();\n    }\n    return this.beforeDelayedPromise;\n  }\n\n  private get loadDelayed() {\n    if (this.delayedPromise === undefined) {\n      this.delayedPromise = this.loadDelayedPromise();\n    }\n    return this.delayedPromise;\n  }\n\n  private get initialized() {\n    if (this.initializedPromise === undefined) {\n      this.initializedPromise = this.getInitializedPromise();\n    }\n    return this.initializedPromise;\n  }\n\n  public addBeforeEagerTask(cb: () => Promise<void>) {\n    this.beforeEagerCallbacks.push(cb);\n  }\n\n  public addLoadEagerTask(cb: () => Promise<void>) {\n    this.loadEagerCallbacks.push(cb);\n  }\n\n  public addBeforeLoadLazyTask(cb: () => Promise<void>) {\n    this.beforeLoadLazyCallbacks.push(cb);\n  }\n\n  public addLoadLazyTask(cb: () => Promise<void>) {\n    this.loadLazyCallbacks.push(cb);\n  }\n\n  public addBeforeLoadDelayedTask(cb: () => Promise<void>) {\n    this.beforeLoadDelayedCallbacks.push(cb);\n  }\n\n  public addLoadDelayedTask(cb: () => Promise<void>) {\n    this.loadDelayedCallbacks.push(cb);\n  }\n\n  public addInitializedTask(cb: () => Promise<void>) {\n    this.initializedCallbacks.push(cb);\n  }\n\n  public async init() {\n    await this.beforeEager;\n    await this.loadEager;\n    await this.beforeLoadLazy;\n    await this.loadLazy;\n    await this.beforeLoadDelayed;\n    await this.loadDelayed;\n    await this.initialized;\n  }\n\n  private async beforeLoadEager(): Promise<void> {\n    const beforeLoadEagerTask: Promise<void> = new Promise((resolve) => {\n      initSampleRUM();\n      decorateTemplateAndTheme();\n      setDocLanguage();\n      resolve();\n    });\n\n    await Promise.all([...this.beforeEagerCallbacks.map((cb) => cb()), beforeLoadEagerTask]);\n  }\n\n  private async loadEagerPromise(): Promise<void> {\n    // eslint-disable-next-line no-async-promise-executor, @typescript-eslint/no-misused-promises\n    const loadEagerTask = new Promise<void>(async (resolve) => {\n      try {\n        const main = document.querySelector('main') as HTMLElement;\n        decorateButtons(main);\n        decorateSections(main);\n        decorateBlocks(main);\n\n        document.body.classList.add('show');\n\n        /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n        if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n          await loadFonts();\n        }\n        resolve();\n      } catch (error) {\n        DebuggerService.error('index: could not load fonts', error);\n      }\n    });\n\n    await Promise.all([...this.loadEagerCallbacks.map((cb) => cb()), loadEagerTask, waitForLCP()]);\n  }\n\n  private async beforeLoadLazyPromise(): Promise<void> {\n    const beforeLoadLazyTask: Promise<void> = new Promise((resolve) => resolve());\n\n    await Promise.all([...this.beforeLoadLazyCallbacks.map((cb) => cb()), beforeLoadLazyTask]);\n  }\n\n  private async loadLazyPromise(): Promise<void> {\n    // eslint-disable-next-line no-async-promise-executor, @typescript-eslint/no-misused-promises\n    const loadLazyTask: Promise<void> = new Promise(async (resolve) => {\n      try {\n        const {\n          lazyStylesScssPath,\n          fontsScssPath,\n          lazyStylesCssPath,\n          sidekickLibraryStylesScssPath,\n          sidekickLibraryStylesCssPath,\n          universalEditorStylesScssPath,\n          universalEditorStylesCssPath,\n        } = config;\n\n        const main = document.querySelector('main') as HTMLElement;\n        await loadSections(main);\n\n        const { hash } = window.location;\n        const element = hash ? document.getElementById(hash.substring(1)) : false;\n        if (hash && element) element.scrollIntoView();\n\n        if (lazyStylesScssPath && lazyStylesCssPath) await loadCSS(lazyStylesCssPath);\n        if (sidekickLibraryStylesScssPath && sidekickLibraryStylesCssPath && isSidekickLibraryActive()) {\n          await loadCSS(sidekickLibraryStylesCssPath);\n        }\n        if (universalEditorStylesScssPath && universalEditorStylesCssPath && isUniversalEditorActive()) {\n          await loadCSS(universalEditorStylesCssPath);\n        }\n        if (fontsScssPath) await loadFonts();\n        sampleRUM('lazy');\n        // @ts-ignore\n        sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n        // @ts-ignore\n        sampleRUM.observe(main.querySelectorAll('picture > img'));\n      } catch (error) {\n        DebuggerService.error('LoadLazyTask: ', error);\n      }\n      resolve();\n    });\n\n    await Promise.all([...this.loadLazyCallbacks.map((cb) => cb()), loadLazyTask]);\n  }\n\n  private async beforeLoadDelayedPromise(): Promise<void> {\n    const beforeLoadDelayedTask: Promise<void> = new Promise((resolve) => resolve());\n\n    await Promise.all([...this.beforeLoadDelayedCallbacks.map((cb) => cb()), beforeLoadDelayedTask]);\n  }\n\n  private async loadDelayedPromise(): Promise<void> {\n    const loadDelayedTask: Promise<void> = new Promise((resolve) => {\n      setTimeout(() => {\n        resolve();\n      }, 3000);\n    });\n\n    await Promise.all([...this.loadDelayedCallbacks.map((cb) => cb()), loadDelayedTask]);\n  }\n\n  private async getInitializedPromise(): Promise<void> {\n    const initializedTask: Promise<void> = new Promise((resolve) => resolve());\n\n    await Promise.all([...this.initializedCallbacks.map((cb) => cb()), initializedTask]);\n  }\n}\n\nexport default new HLX();\n","import HLX from './index';\n\nconst READY_STATES = {\n  interactive: 'interactive',\n  complete: 'complete',\n};\n\nasync function init() {\n  HLX.addBeforeEagerTask(() => {\n    const main = document.getElementsByTagName('main')[0];\n    main.setAttribute('id', 'main');\n    return Promise.resolve();\n  });\n\n  await HLX.init();\n}\n\nexport function initHLXApp() {\n  if (document.readyState === READY_STATES.interactive || document.readyState === READY_STATES.complete) {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    init();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      const readyState = document.readyState;\n      if (readyState === READY_STATES.interactive || readyState === READY_STATES.complete) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        init();\n      }\n    });\n  }\n}\n","import './components/icon/icon';\nimport { initHLXApp } from './app/init';\n\ninitHLXApp();\n\ndeclare global {\n  interface Window {\n    hlx: {\n      RUM_MASK_URL: string;\n      codeBasePath: string;\n      lighthouse: boolean;\n    };\n  }\n}\n"],"names":["isUniversalEditorActive","decorateTemplateAndTheme","aemDecorateTemplateAndTheme","undefinedOnEmpty","value","setDocLanguage","lang","getMetadata","getLocation","isSidekickLibraryActive","getOrigin","getUrlForEndpoint","endpoint","location","basePath","normalizedEndpoint","fullPath","error","loadCSS","href","aemLoadCSS","config","loadFonts","fontsCssPath","DebuggerService","sampleRUM","checkpoint","data","aemSampleRUM","setupHlxObj","mainScriptPath","aemSetup","scriptEl","initSampleRUM","loadBlock","block","aemLoadBlock","waitForLCP","firstSection","lcpCandidate","lcpBlocks","blocks","blockPromises","firstBlock","resolve","ev","HLX","cb","beforeLoadEagerTask","loadEagerTask","main","decorateButtons","decorateSections","decorateBlocks","beforeLoadLazyTask","loadLazyTask","lazyStylesScssPath","fontsScssPath","lazyStylesCssPath","sidekickLibraryStylesScssPath","sidekickLibraryStylesCssPath","universalEditorStylesScssPath","universalEditorStylesCssPath","loadSections","hash","element","beforeLoadDelayedTask","loadDelayedTask","initializedTask","HLX$1","READY_STATES","init","initHLXApp","readyState"],"mappings":"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"}