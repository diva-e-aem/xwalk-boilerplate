{"version":3,"file":"moveInstrumentation.CxEVSfMM.js","sources":["../../src/helpers/moveAttributes.ts","../../src/helpers/moveInstrumentation.ts"],"sourcesContent":["/**\n * Moves all the attributes from a given elmenet to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n * @param {string[]} attributes the attributes to be moved\n */\nexport function moveAttributes(from: Element, to: Element, attributes: string[]) {\n  if (!attributes) {\n    // eslint-disable-next-line no-param-reassign\n    attributes = [...from.attributes].map(({ nodeName }) => nodeName);\n  }\n  attributes.forEach((attr) => {\n    const value = from.getAttribute(attr);\n    if (value) {\n      to.setAttribute(attr, value);\n      from.removeAttribute(attr);\n    }\n  });\n}\n","import { moveAttributes } from './moveAttributes';\n\n/**\n * Move instrumentation attributes from a given element to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n */\nexport function moveInstrumentation(from: Element, to: Element) {\n  moveAttributes(\n    from,\n    to,\n    [...from.attributes]\n      .map(({ nodeName }) => nodeName)\n      .filter((attr) => attr.startsWith('data-aue-') || attr.startsWith('data-richtext-'))\n  );\n}\n"],"names":["moveAttributes","from","to","attributes","nodeName","attr","value","moveInstrumentation"],"mappings":"AAMgB,SAAAA,EAAeC,EAAeC,EAAaC,EAAsB,CAC1EA,IAEUA,EAAA,CAAC,GAAGF,EAAK,UAAU,EAAE,IAAI,CAAC,CAAE,SAAAG,KAAeA,CAAQ,GAEvDD,EAAA,QAASE,GAAS,CACrB,MAAAC,EAAQL,EAAK,aAAaI,CAAI,EAChCC,IACCJ,EAAA,aAAaG,EAAMC,CAAK,EAC3BL,EAAK,gBAAgBI,CAAI,EAC3B,CACD,CACH,CCXgB,SAAAE,EAAoBN,EAAeC,EAAa,CAC9DF,EACEC,EACAC,EACA,CAAC,GAAGD,EAAK,UAAU,EAChB,IAAI,CAAC,CAAE,SAAAG,CAAe,IAAAA,CAAQ,EAC9B,OAAQC,GAASA,EAAK,WAAW,WAAW,GAAKA,EAAK,WAAW,gBAAgB,CAAC,CAAA,CAEzF"}