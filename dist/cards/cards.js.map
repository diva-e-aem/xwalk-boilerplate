{"version":3,"file":"cards.js","sources":["../../src/helpers/moveAttributes.ts","../../src/helpers/moveInstrumentation.ts","../../src/helpers/sidekick/getHref.ts","../../src/utils/createOptimizedPicture.ts","../../src/blocks/cards/cards.ts"],"sourcesContent":["/**\n * Moves all the attributes from a given elmenet to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n */\nexport function moveAttributes(from, to, attributes) {\n  if (!attributes) {\n    // eslint-disable-next-line no-param-reassign\n    attributes = [...from.attributes].map(({ nodeName }) => nodeName);\n  }\n  attributes.forEach((attr) => {\n    const value = from.getAttribute(attr);\n    if (value) {\n      to.setAttribute(attr, value);\n      from.removeAttribute(attr);\n    }\n  });\n}\n","import { moveAttributes } from './moveAttributes';\n\n/**\n * Move instrumentation attributes from a given element to another given element.\n * @param {Element} from the element to copy attributes from\n * @param {Element} to the element to copy attributes to\n */\nexport function moveInstrumentation(from, to) {\n  moveAttributes(\n    from,\n    to,\n    [...from.attributes]\n      .map(({ nodeName }) => nodeName)\n      .filter((attr) => attr.startsWith('data-aue-') || attr.startsWith('data-richtext-'))\n  );\n}\n","import { isSidekickLibraryActive } from './isSidekickLibraryActive';\n\n/**\n * Returns the true origin of the current page in the browser.\n * If the page is running in an iframe with srcdoc, the ancestor origin + the path query param is returned.\n * @returns {String} The href of the current page or the href of the block running in the library\n *\n * @example\n * const url = new URL(src, getHref());\n *\n * @remarks\n * Needs to be used when the Sidekick Library Plugin is in use.\n */\nexport function getHref(): string {\n  if (!isSidekickLibraryActive()) return window.location.href;\n\n  const { location: parentLocation } = window.parent;\n  const urlParams = new URLSearchParams(parentLocation.search);\n  return `${parentLocation.origin}${urlParams.get('path')}`;\n}\n","import { getHref } from 'Helpers/sidekick/getHref';\n\n/**\n * Represents a breakpoint configuration used in responsive web design.\n *\n * @interface BreakPoint\n * @property {number} [media] - The media query string defining the condition for this breakpoint.\n * @property {number} [width] - The width associated with this breakpoint.\n *\n * @example\n * // Example usage:\n * const exampleBreakPoint: BreakPoint = {\n *   media: \"(min-width: 600px)\",\n *   width: \"100\"\n * };\n */\ninterface BreakPoint {\n  media?: string;\n  width?: number;\n}\n\n/**\n * Represents the arguments for creating an optimized picture element.\n *\n * @interface CreateOptimizedPictureArgs\n * @property {string} src - The URL of the image.\n * @property {string} alt - The alternative text for the image.\n * @property {number} width - The width of the image in CSS pixels.\n * @property {number} height - The height of the image in CSS pixels.\n * @property {boolean} [eager] - Whether to load the image immediately.\n * @property {BreakPoint[]} [breakpoints] - The breakpoints for responsive images.\n */\nexport interface CreateOptimizedPictureArgs {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  eager?: boolean;\n  breakpoints?: BreakPoint[];\n}\n\n/**\n * Creates an optimized HTML picture element with responsive image sources and a fallback image.\n *\n * @param {CreateOptimizedPictureArgs} createOptimizedPictureArgs - The arguments for creating the picture element.\n * @returns {HTMLPictureElement} - The created HTML picture element.\n *\n * @example\n * const args = {\n *   src: 'image.jpg',\n *   alt: 'Example Image',\n *   width: '200',\n *   height: '150',\n *   eager: true,\n *   breakpoints: [\n *     { media: '(min-width: 600px)', width: '800' },\n *     { media: '(min-width: 1200px)', width: '1600' }\n *   ]\n * };\n * const pictureElement = createOptimizedPicture(args);\n * document.body.appendChild(pictureElement);\n *\n * @remarks\n * The last breakpoint provided in the `breakpoints` array is used as the source for the fallback image.\n */\nexport function createOptimizedPicture(\n  createOptimizedPictureArgs: CreateOptimizedPictureArgs\n): HTMLPictureElement | undefined {\n  if (createOptimizedPictureArgs.src === '') return undefined;\n\n  const {\n    src,\n    alt,\n    eager = false,\n    width,\n    height,\n    breakpoints = [{ media: '(min-width: 600px)', width: 2000 }, { width: 750 }],\n  } = createOptimizedPictureArgs;\n  const url = new URL(src, getHref());\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((breakpoint: BreakPoint): void => {\n    const source = document.createElement('source');\n    if (breakpoint.media) source.setAttribute('media', breakpoint.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${breakpoint.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((breakpoint: Record<string, string>, index: number): void => {\n    if (index < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (breakpoint.media) source.setAttribute('media', breakpoint.media);\n      source.setAttribute('srcset', `${pathname}?width=${breakpoint.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      img.setAttribute('width', width.toString());\n      img.setAttribute('height', height.toString());\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${breakpoint.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n","import { moveInstrumentation } from 'Helpers/moveInstrumentation';\nimport { createOptimizedPicture } from 'Utils/createOptimizedPicture';\nimport './cards.scss';\n\nexport default function decorate(block) {\n  /* change to ul, li */\n  const ul = document.createElement('ul');\n  [...block.children].forEach((row) => {\n    const li = document.createElement('li');\n    moveInstrumentation(row, li);\n    while (row.firstElementChild) li.append(row.firstElementChild);\n    [...li.children].forEach((div) => {\n      if (div.children.length === 1 && div.querySelector('picture')) div.className = 'cards-card-image';\n      else div.className = 'cards-card-body';\n    });\n    ul.append(li);\n  });\n  ul.querySelectorAll('picture > img').forEach((img) => {\n    const currentImg = img as HTMLImageElement;\n    const optimizedPic = createOptimizedPicture({\n      src: currentImg.src,\n      alt: currentImg.alt,\n      eager: false,\n      width: currentImg.width,\n      height: currentImg.height,\n    });\n    moveInstrumentation(currentImg, optimizedPic?.querySelector('img'));\n    if (optimizedPic) {\n      currentImg.closest('picture')?.replaceWith(optimizedPic);\n    }\n  });\n  block.textContent = '';\n  block.append(ul);\n}\n"],"names":["moveAttributes","from","to","attributes","nodeName","attr","value","moveInstrumentation","getHref","isSidekickLibraryActive","parentLocation","urlParams","createOptimizedPicture","createOptimizedPictureArgs","src","alt","eager","width","height","breakpoints","url","picture","pathname","ext","breakpoint","source","index","img","decorate","block","ul","row","li","div","currentImg","optimizedPic","_a"],"mappings":"sEAKgB,SAAAA,EAAeC,EAAMC,EAAIC,EAAY,CAC9CA,IAEUA,EAAA,CAAC,GAAGF,EAAK,UAAU,EAAE,IAAI,CAAC,CAAE,SAAAG,KAAeA,CAAQ,GAEvDD,EAAA,QAASE,GAAS,CACrB,MAAAC,EAAQL,EAAK,aAAaI,CAAI,EAChCC,IACCJ,EAAA,aAAaG,EAAMC,CAAK,EAC3BL,EAAK,gBAAgBI,CAAI,EAC3B,CACD,CACH,CCVgB,SAAAE,EAAoBN,EAAMC,EAAI,CAC5CF,EACEC,EACAC,EACA,CAAC,GAAGD,EAAK,UAAU,EAChB,IAAI,CAAC,CAAE,SAAAG,CAAe,IAAAA,CAAQ,EAC9B,OAAQC,GAASA,EAAK,WAAW,WAAW,GAAKA,EAAK,WAAW,gBAAgB,CAAC,CAAA,CAEzF,CCFO,SAASG,GAAkB,CAChC,GAAI,CAACC,EAAwB,EAAG,OAAO,OAAO,SAAS,KAEvD,KAAM,CAAE,SAAUC,GAAmB,OAAO,OACtCC,EAAY,IAAI,gBAAgBD,EAAe,MAAM,EAC3D,MAAO,GAAGA,EAAe,MAAM,GAAGC,EAAU,IAAI,MAAM,CAAC,EACzD,CC8CO,SAASC,EACdC,EACgC,CAChC,GAAIA,EAA2B,MAAQ,GAAW,OAE5C,KAAA,CACJ,IAAAC,EACA,IAAAC,EACA,MAAAC,EAAQ,GACR,MAAAC,EACA,OAAAC,EACA,YAAAC,EAAc,CAAC,CAAE,MAAO,qBAAsB,MAAO,KAAQ,CAAE,MAAO,IAAK,CACzE,EAAAN,EACEO,EAAM,IAAI,IAAIN,EAAKN,EAAS,CAAA,EAC5Ba,EAAU,SAAS,cAAc,SAAS,EAC1C,CAAE,SAAAC,CAAa,EAAAF,EACfG,EAAMD,EAAS,UAAUA,EAAS,YAAY,GAAG,EAAI,CAAC,EAGhD,OAAAH,EAAA,QAASK,GAAiC,CAC9C,MAAAC,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAW,OAAcC,EAAA,aAAa,QAASD,EAAW,KAAK,EAC5DC,EAAA,aAAa,OAAQ,YAAY,EACxCA,EAAO,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAW,KAAK,gCAAgC,EACnGH,EAAQ,YAAYI,CAAM,CAAA,CAC3B,EAGWN,EAAA,QAAQ,CAACK,EAAoCE,IAAwB,CAC3E,GAAAA,EAAQP,EAAY,OAAS,EAAG,CAC5B,MAAAM,EAAS,SAAS,cAAc,QAAQ,EAC1CD,EAAW,OAAcC,EAAA,aAAa,QAASD,EAAW,KAAK,EAC5DC,EAAA,aAAa,SAAU,GAAGH,CAAQ,UAAUE,EAAW,KAAK,WAAWD,CAAG,kBAAkB,EACnGF,EAAQ,YAAYI,CAAM,CAAA,KACrB,CACC,MAAAE,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,aAAa,UAAWX,EAAQ,QAAU,MAAM,EAChDW,EAAA,aAAa,MAAOZ,CAAG,EAC3BY,EAAI,aAAa,QAASV,EAAM,SAAU,CAAA,EAC1CU,EAAI,aAAa,SAAUT,EAAO,SAAU,CAAA,EAC5CG,EAAQ,YAAYM,CAAG,EACnBA,EAAA,aAAa,MAAO,GAAGL,CAAQ,UAAUE,EAAW,KAAK,WAAWD,CAAG,kBAAkB,CAC/F,CAAA,CACD,EAEMF,CACT,CC3GA,SAAwBO,EAASC,EAAO,CAEhC,MAAAC,EAAK,SAAS,cAAc,IAAI,EACtC,CAAC,GAAGD,EAAM,QAAQ,EAAE,QAASE,GAAQ,CAC7B,MAAAC,EAAK,SAAS,cAAc,IAAI,EAEtC,IADAzB,EAAoBwB,EAAKC,CAAE,EACpBD,EAAI,mBAAsBC,EAAA,OAAOD,EAAI,iBAAiB,EAC7D,CAAC,GAAGC,EAAG,QAAQ,EAAE,QAASC,GAAQ,CAC5BA,EAAI,SAAS,SAAW,GAAKA,EAAI,cAAc,SAAS,EAAGA,EAAI,UAAY,mBAC1EA,EAAI,UAAY,iBAAA,CACtB,EACDH,EAAG,OAAOE,CAAE,CAAA,CACb,EACDF,EAAG,iBAAiB,eAAe,EAAE,QAASH,GAAQ,OACpD,MAAMO,EAAaP,EACbQ,EAAevB,EAAuB,CAC1C,IAAKsB,EAAW,IAChB,IAAKA,EAAW,IAChB,MAAO,GACP,MAAOA,EAAW,MAClB,OAAQA,EAAW,MAAA,CACpB,EACD3B,EAAoB2B,EAAYC,GAAA,YAAAA,EAAc,cAAc,MAAM,EAC9DA,KACFC,EAAAF,EAAW,QAAQ,SAAS,IAA5B,MAAAE,EAA+B,YAAYD,GAC7C,CACD,EACDN,EAAM,YAAc,GACpBA,EAAM,OAAOC,CAAE,CACjB"}